plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
write.table(fit, file="C:/Users/Mason Kulbaba/Dropbox/git/ESA fvt/results/FRT_anthesis_and_longevity_binomial.csv"
, sep=",", quote=F, row.names=F)
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
summary(fit.1com)#AIC: 867.1272
summary(fit.2com)#AIC: 729.6618
AIC(fit.1, fit.2)
AIC(fit.1com, fit.2com)
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='binomial')
summary(fit.1com)#AIC: 867.1272
summary(fit.2com)#AIC: 729.6618
AIC(fit.1com, fit.2com)
summary(fit.2com)#AIC: 729.6618
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='binomial')
summary(fit.1com)#AIC: 867.1272
summary(fit.2com)#AIC: 729.6618
setwd("C:/Users/Mason Kulbaba/Dropbox/git/adaptive-capacity/VaW_W_analyses/GC")
#Load reaster
#2015 reaster data
load(file="rout2015b.RData")
#2016 reaster data
load(file="rout2016b.RData")
#2017 reaster data
load(file="rout2017b.RData")
library(aster)
#########################
#Estimate Va(W) for 2015#
#########################
#extract bhat - the estimates of random effects
bhat<- rout2015b$b
#extract the sire effects
bhat.sire<- bhat[grep("paternalID", names(bhat))]
#stem plot of bhat estimates
stem(bhat.sire)#the canonical estimates "look" somewhat normal...as they should
hoom <- predict(rout2015b$obj, newcoef = rout2015b$alpha)
hoom<- matrix(hoom, ncol =5)
hoom<- hoom[ , 5]
#add a component of b_hat that we want to map to the mean value
#parameter scale (from canoonical scale) to fit:block1 fixed effect (alpha[11]= block6),
#predict, and take value of fourth node for first indiv.
map <- function(b) {
stopifnot(length(b) == 1)
stopifnot(is.finite(b))
alpha <- rout2015b$alpha
alpha[11] <- alpha[11] + b #block 6 effects
hoom <- predict(rout2015b$obj, newcoef = alpha)
hoom <- matrix(hoom, ncol = 5)
return(hoom[1874, 5])#first individual in block 6, fifth node
}
#vectorize mapping function
fred<- Vectorize(map)
#plot the curve
curve(fred, from = -1 / 2, to = 1/2, xlab="b", ylab=expression(mu(b)))
#use the mapping function "fred" to convert the sire effects from the
#canonical to mean-value parameter scale
bhat.sireGC.mu<- fred(bhat.sire)
GC_b2015<- bhat.sireGC.mu
stem(bhat.sireGC.mu)#no longer normal as expected
#generate probability density distribution
gc2015den<-density(bhat.sireGC.mu)
GC2015_den<- cbind(gc2015den[[1]], gc2015den[[2]])
#write.csv(GC2015_den, "gc2015den.csv", quote = FALSE, row.names = FALSE)
hoom<- predict(rout2015b$obj, newcoef = rout2015b$alpha, se.fit=TRUE)
goom <- hoom$gradient
moom<- goom[,5]
moom<- matrix(moom, ncol=5)
#this is additive genetic variation for fitness!
GC_Va<- 4*moom[1874 ,5]^2 * rout2015b$nu[1]/map(0)
GC_Va #1.8576
#recall mean fitness in 2015 = 1.11
#predicted change in fitness from FFTNS:
GC_Va/1.11
#alternate way to get Va(W)
hoom <- predict(rout2015$obj, newcoef = rout2015$alpha, gradient = TRUE)
goom <- hoom$gradient
moom <- goom[ , 5]
moom <- matrix(moom, ncol = 5)
moom[1874, 5]
#very close
4 * moom[1874, 5]^2 * rout2015$nu[1]
#Standard Error for predicted change in fitness
sout<- summary(rout2015)
sout
4*moom[1874 ,5]^2 * sout$nu["parental", "Std. Error"]/1.11
#OK, very nice. Now see how this standard error compares with that generated from a
#more "rigorous" method
#inv. Fisher info.
fisher <- sout$fisher
eout <- eigen(fisher, symmetric = TRUE)
fisher.inv <- eout$vectors %*% diag(1/eout$values) %*% t(eout$vectors)
dim(fisher)
dim(fisher.inv)
length(rout2015$alpha)
length(rout2015$nu)
#check - NOTE: changed from [6, 6] that was in Charlie's origional code
sqrt(fisher.inv[13, 13])
#good are the same
sout$nu["parental", "Std. Error"]
ioom <- seq(along = hoom$fit)
ioom <- matrix(ioom, ncol = 5)
idx <- ioom[1874, 5]
idx
g <- hoom$gradient[idx, ]
#check
predict(rout2015$obj, newcoef = rout2015$alpha, se.fit = TRUE)$se.fit[idx]
sqrt(t(g) %*% solve(rout2015$obj$fisher) %*% g)
#apply delta method for predicted change in fitness
g <- c(g, 0, 0)
xi.hat <- rout2015$nu[1]
eta.hat <- foom[1874, 5]
v.nu <- fisher.inv[13, 13]
v.meanfit <- t(g) %*% fisher.inv %*% g
v.nu.meanfit <- (fisher.inv %*% g)[13]
#########################
#Estimate Va(W) for 2016#
#########################
#extract bhat - the estimates of random effects
bhat<- rout2016b$b
#extract the sire effects
bhat.sire<- bhat[grep("paternalID", names(bhat))]
#stem plot of bhat estimates
stem(bhat.sire)#the canonical estimates "look" somewhat normal...as they should
hoom <- predict(rout2016b$obj, newcoef = rout2016b$alpha)
hoom<- matrix(hoom, ncol =5)
hoom<- hoom[ , 5]
#add a component of b_hat that we want to map to the mean value
#parameter scale (from canoonical scale) to fit:block1 fixed effect (alpha[11]= block6),
#predict, and take value of fourth node for first indiv.
map <- function(b) {
stopifnot(length(b) == 1)
stopifnot(is.finite(b))
alpha <- rout2016b$alpha
alpha[11] <- alpha[11] + b #block 6 effects
hoom <- predict(rout2016b$obj, newcoef = alpha)
hoom <- matrix(hoom, ncol = 5)
return(hoom[2274, 5])#first individual in block 6, fifth node
}
#vectorize mapping function
fred<- Vectorize(map)
#plot the curve
curve(fred, from = -1 / 2, to = 1/2, xlab="b", ylab=expression(mu(b)))
#use the mapping function "fred" to convert the sire effects from the
#canonical to mean-value parameter scale
bhat.sireGC.mu<- fred(bhat.sire)
GC_b2016<- bhat.sireGC.mu
stem(bhat.sireGC.mu)#no longer normal as expected
#generate probability density distribution
gc2016den<- density(bhat.sireGC.mu)
GC2016_den<- cbind(gc2016den[[1]], gc2016den[[2]])
#write.csv(GC2016_den, "gc2016den.csv", quote = FALSE, row.names = FALSE)
hoom<- predict(rout2016b$obj, newcoef = rout2016b$alpha, se.fit=TRUE)
goom <- hoom$gradient
moom<- goom[,5]
moom<- matrix(moom, ncol=5)
#this is additive genetic variation for fitness!
GC_Va<- 4*moom[2274 ,5]^2 * rout2016b$nu[1]/map(0)
GC_Va #0.83021
#recall mean fitness in 2016 = 0.64
#Predicted change in fitness
GC_Va/0.64
sout<-summary(rout2016b)
4*moom[2274 ,5]^2 * sout$nu["parental", "Std. Error"]/0.64
bhat<- rout2015b$b
#extract the sire effects
bhat.sire<- bhat[grep("paternalID", names(bhat))]
b2015<- bhat.sire
bhat<- rout2016b$b
#extract the sire effects
bhat.sire<- bhat[grep("paternalID", names(bhat))]
b2016<- bhat.sire
bhat<- rout2015b$b
#extract the sire effects
bhat.sire<- bhat[grep("paternalID", names(bhat))]
b2015<- bhat.sire
cor.test(b2015, b2016)
fit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
,weights=unlist(geno), family='binomial')
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='binomial')
AIC(fit.1com, fit.2com)
#output of results
fit<- coef(fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$deviance
AQIC(fit.1com, chat=chat.1q)
QAIC(fit.1com, chat=chat.1q)
chat.1q<- summary(qfit.1com)$deviance
chat.1q
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$deviance
chat.2q<- summary(qfit.2com)$deviance
QAIC(fit.1com, chat=chat.1q)
chat.1q<- summary(qfit.1com)$dispersion
chat.2q<- summary(qfit.2com)$dispersion
QAIC(fit.1com, chat=chat.1q)
QAIC(fit.2com, chat=chat.2q)
AIC(fit.1com, fit.2com)
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$dispersion
chat.2q<- summary(qfit.2com)$dispersion
QAIC(fit.1com, chat=chat.1q)#128.1176
QAIC(fit.2com, chat=chat.2q)#132.1618
#output of results
fit<- coef(qfit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
#output of results
fit<- coef(fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
write.table(fit, file="C:/Users/Mason Kulbaba/Dropbox/git/ESA fvt/results/OC_anthesis_and_longevity_binomial.csv"
, sep=",", quote=F, row.names=F)
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
#output of results
fit<- coef(qfit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$dispersion
chat.2q<- summary(qfit.2com)$dispersion
# Start with just anthesis
fit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
,weights=unlist(geno), family='binomial')
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
,weights=unlist(geno), family='binomial')
summary(fit.1com)#AIC: 803.6431
summary(fit.2com)#AIC: 736.2279
AIC(fit.1com, fit.2com)
#output of results
fit<- coef(fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$dispersion
chat.2q<- summary(qfit.2com)$dispersion
QAIC(fit.1com, chat=chat.1q)#123.7833
QAIC(fit.2com, chat=chat.2q)#130.7576
#output of results
fit<- coef(qfit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
# Start with just anthesis
frt.fit.1com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
, family='nb')
# anthesis and longevity
frt.fit.2com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
, family='nb')
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
AIC(frt.fit.1com, frt.fit.2com)
#output of results
fit<- coef(frt.fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
# Start with just anthesis
frt.fit.1com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
, family='nb')
# anthesis and longevity
frt.fit.2com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
, family='nb')
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
AIC(frt.fit.1com, frt.fit.2com)
# Start with just anthesis
frt.fit.1com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "t2", transform='standardized')
, family='nb')
# anthesis and longevity
frt.fit.2com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "t2", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="t2", transform='standardized')
, family='nb')
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
AIC(frt.fit.1com, frt.fit.2com)
#output of results
fit<- coef(frt.fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
# anthesis and longevity
frt.fit.2com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
, family='nb')
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
AIC(frt.fit.1com, frt.fit.2com)
# anthesis and longevity + interaction
qfit.3com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
+lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized'):lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity + interaction
qfit.3com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
+lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')*lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# Start with just anthesis
frt.fit.1com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "t2", transform='standardized')
, family='poisson')
# Start with just anthesis
frt.fit.1com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
, family='poisson')
# anthesis and longevity
frt.fit.2com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
, family='poisson')
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
AIC(frt.fit.1com, frt.fit.2com)
#output of results
fit<- coef(frt.fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
# Start with just anthesis
frt.fit.1com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
, family='nb')
# anthesis and longevity
frt.fit.2com<- pfr(frt ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
, family='nb')
summary(frt.fit.1com) #AIC: 403.9876
summary(frt.fit.2com) #AIC: 411.4042
AIC(frt.fit.1com, frt.fit.2com)
#output of results
fit<- coef(frt.fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "s", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="s", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$dispersion
chat.2q<- summary(qfit.2com)$dispersion
QAIC(fit.1com, chat=chat.1q)#123.7833
QAIC(fit.2com, chat=chat.2q)#138.4325
#output of results
fit<- coef(qfit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
#quasibinomial
# Start with just anthesis
qfit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
# anthesis and longevity
qfit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='quasibinomial')
chat.1q<- summary(qfit.1com)$dispersion
chat.2q<- summary(qfit.2com)$dispersion
QAIC(fit.1com, chat=chat.1q)#123.7833
QAIC(fit.2com, chat=chat.2q)#138.4325
#output of results
fit<- coef(qfit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
write.table(fit, file="C:/Users/Mason Kulbaba/Dropbox/git/ESA fvt/results/OC_anthesis_and_longevity_binomial.csv"
, sep=",", quote=F, row.names=F)
#output of results
fit<- coef(fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
# Start with just anthesis
fit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
,weights=unlist(geno), family='binomial')
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='standardized')
,weights=unlist(geno), family='binomial')
summary(fit.1com)#AIC: 803.6431
summary(fit.2com)#AIC: 667.4801
AIC(fit.1com, fit.2com)
#output of results
fit<- coef(fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
write.table(fit, file="C:/Users/Mason Kulbaba/Dropbox/git/ESA fvt/results/OC_anthesis_and_longevity_binomial.csv"
, sep=",", quote=F, row.names=F)
t<-lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
summary(t)
t
plot(t)
names(t)
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='standardized')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='linear')
,weights=unlist(geno), family='binomial')
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='linear')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='linear')
,weights=unlist(geno), family='binomial')
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='noInteraction')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='noInteraction')
,weights=unlist(geno), family='binomial')
# Start with just anthesis
fit.1com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te",
transform='noInteraction')
,weights=unlist(geno), family='binomial')
# anthesis and longevity
fit.2com<- pfr(vec ~ lf.vd(anthesis.common, vd=fday.com, basistype = "te", transform='lagged')
+ lf.vd(long.common, vd=fday.com, basistype="te", transform='lagged')
,weights=unlist(geno), family='binomial')
summary(fit.2com)#AIC: 667.4801
AIC(fit.1com, fit.2com)
#output of results
fit<- coef(fit.2com)
#make absolute frstart date
fit$x<- fit$anthesis.common.arg * fit$anthesis.common.vd
plot(fit$x, fit$value, type="l", main="absolute")
plot(fit$anthesis.common.arg, fit$value, type="l", main=" rel x")
setwd("C:/Users/Mason Kulbaba/Dropbox/git/adaptive-capacity/VaW_W_analyses/GC")
setwd("C:/Users/mason/Dropbox/git/adaptive-capacity/VaW_W_analyses/GC")
gcdat<- read.csv("gcdata.csv")
head(gcdat)
levels(gcdat$cohort)
unique(gcdat$cohort)
install.packages("aster")
setwd("C:/Users/mason/Dropbox/git/adaptive-capacity/progeny/GC_3yr_seedpool.csv")
setwd("C:/Users/mason/Dropbox/git/adaptive-capacity/progeny")
gcdat<- read.csv("GC_3yr_seedpool.csv")
head(gcdat)
#divide into year-specific files
gc2015<- subset(gcdat, year==2015)
gc2016<- subset(gcdat, year==2016)
gc2017<- subset(gcdat, year==2017)
